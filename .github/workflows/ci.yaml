name: ci

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

  workflow_dispatch:

jobs:
  cabal:
    strategy:
      fail-fast: false
      matrix:
        ghc:
          - "8.10.7"
          - "9.0.2"
          - "9.2.8"
          - "9.4.8"
          - "9.6.5"
          - "9.8.2"
          - "9.10.1"
        os:
          - "macos-latest"
          - "ubuntu-latest"
          - "windows-latest"
        exclude:
          - {ghc: "8.10.7", os: "macos-latest"}
          - {ghc: "9.0.2", os: "macos-latest"}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: haskell-actions/setup@v2
        with:
          ghc-version: ${{ matrix.ghc }}

      - name: Configure
        run: cabal configure --enable-tests --ghc-options -Werror

      - name: Compile
        run: cabal build all

      - name: Test fs-effectful
        run: cabal test fs-effectful --test-options '--hedgehog-tests 100000'

      - name: Test logger-effectful
        run: cabal test logger-effectful --test-options '--hedgehog-tests 100000'

      - name: Test logger-ns-effectful
        run: cabal test logger-ns-effectful

      - name: Test time-effectful
        run: cabal test time-effectful --test-options '--hedgehog-tests 100000'

      - name: Test unix-compat-effectful
        run: cabal test unix-compat-effectful

      - name: Benchmark fs-effectful/unix-compat-effectful
        if: ${{ matrix.os == 'ubuntu-latest' }}
        id: bench
        run: |
          cabal bench fs-effectful:benchmark:benchmarks --benchmark-options '
            --csv bench/bench_${{ matrix.os }}_${{ matrix.ghc }}_ci.csv
            --svg bench/bench_${{ matrix.os }}_${{ matrix.ghc }}_ci.svg
            --fail-if-slower 30
            --fail-if-faster 30'

      - uses: actions/upload-artifact@v3
        if: ${{ failure() && steps.bench.conclusion == 'failure' }}
        with:
          name: build-artifacts
          path: |
            lib/fs-effectful/bench/bench_${{ matrix.os }}_${{ matrix.ghc }}_ci.csv
            lib/fs-effectful/bench/bench_${{ matrix.os }}_${{ matrix.ghc }}_ci.svg
  nix:
    strategy:
      fail-fast: false
      matrix:
        os:
          - "macos-latest"
          - "ubuntu-latest"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup nix
        uses: cachix/install-nix-action@v25
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Build & Test
        run: |
          nix build \
            .#concurrent-effectful \
            .#env-guard-effectful \
            .#environment-effectful \
            .#exceptions-effectful \
            .#fs-effectful \
            .#ioref-effectful \
            .#logger-effectful \
            .#logger-ns-effectful \
            .#optparse-effectful \
            .#stm-effectful \
            .#terminal-effectful \
            .#time-effectful \
            .#unix-compat-effectful

  lint:
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4

      - name: Setup nix
        uses: cachix/install-nix-action@v25
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Formatting
        run: |
          nix run .#format
          git diff --exit-code --color=always

      - name: HLint
        run: nix run .#lint
